-- MySQL Script generated by MySQL Workbench
-- 02/14/16 21:58:09
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tickets` ;

-- -----------------------------------------------------
-- Schema tickets
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tickets` DEFAULT CHARACTER SET utf8mb4 ;
USE `tickets` ;

-- -----------------------------------------------------
-- Table `tickets`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`User` ;

CREATE TABLE IF NOT EXISTS `tickets`.`User` (
  `user_id` BIGINT(30) NOT NULL AUTO_INCREMENT COMMENT '',
  `username` VARCHAR(45) NOT NULL COMMENT '',
  `image_url` TEXT NOT NULL COMMENT '',
  PRIMARY KEY (`user_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`Event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`Event` ;

CREATE TABLE IF NOT EXISTS `tickets`.`Event` (
  `event_id` BIGINT(30) NOT NULL AUTO_INCREMENT COMMENT '',
  `event_name` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`event_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`EventDescription`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`EventDescription` ;

CREATE TABLE IF NOT EXISTS `tickets`.`EventDescription` (
  `Event_event_id` BIGINT(30) NOT NULL COMMENT '',
  `artist` VARCHAR(45) NULL COMMENT '',
  `location` VARCHAR(45) NULL COMMENT '',
  `date` VARCHAR(45) NULL COMMENT '',
  `description` TEXT NULL COMMENT '',
  PRIMARY KEY (`Event_event_id`)  COMMENT '',
  INDEX `fk_EventDescription_Event_idx` (`Event_event_id` ASC)  COMMENT '',
  CONSTRAINT `fk_EventDescription_Event`
    FOREIGN KEY (`Event_event_id`)
    REFERENCES `tickets`.`Event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`Group` ;

CREATE TABLE IF NOT EXISTS `tickets`.`Group` (
  `group_id` BIGINT(30) NOT NULL AUTO_INCREMENT COMMENT '',
  `group_name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`group_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`Group_has_User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`Group_has_User` ;

CREATE TABLE IF NOT EXISTS `tickets`.`Group_has_User` (
  `Group_group_id` BIGINT(30) NOT NULL COMMENT '',
  `User_user_id` BIGINT(30) NOT NULL COMMENT '',
  `is_owner` TINYINT(1) NOT NULL COMMENT '',
  PRIMARY KEY (`Group_group_id`, `User_user_id`)  COMMENT '',
  INDEX `fk_Group_has_User_User1_idx` (`User_user_id` ASC)  COMMENT '',
  INDEX `fk_Group_has_User_Group1_idx` (`Group_group_id` ASC)  COMMENT '',
  CONSTRAINT `fk_Group_has_User_Group1`
    FOREIGN KEY (`Group_group_id`)
    REFERENCES `tickets`.`Group` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Group_has_User_User1`
    FOREIGN KEY (`User_user_id`)
    REFERENCES `tickets`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tickets`.`Event_has_Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tickets`.`Event_has_Group` ;

CREATE TABLE IF NOT EXISTS `tickets`.`Event_has_Group` (
  `Event_event_id` BIGINT(30) NOT NULL COMMENT '',
  `Group_group_id` BIGINT(30) NOT NULL COMMENT '',
  PRIMARY KEY (`Event_event_id`, `Group_group_id`)  COMMENT '',
  INDEX `fk_Event_has_Group_Group1_idx` (`Group_group_id` ASC)  COMMENT '',
  INDEX `fk_Event_has_Group_Event1_idx` (`Event_event_id` ASC)  COMMENT '',
  CONSTRAINT `fk_Event_has_Group_Event1`
    FOREIGN KEY (`Event_event_id`)
    REFERENCES `tickets`.`Event` (`event_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_has_Group_Group1`
    FOREIGN KEY (`Group_group_id`)
    REFERENCES `tickets`.`Group` (`group_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
